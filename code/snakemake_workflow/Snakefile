include: "rules/common.smk"

##### Target rules #####

rule all:
    input:
        "../../data/TSS_annotations/TataAnnotations.txt.gz",
        "../../output/OverdispersionEstimatesFromChimp_NoVirusChallangedIndividuals.NoLengthNorm.txt",
        expand("../../output/GtexTissueMatrix.mu.NoLengthNorm.{listname}.txt.gz", listname=["40EachTissue","AllModeExtractionSamples"]),
        "OverdispersionAnalysis/TableSubset.txt",
        expand("../../output/GTEX_renalysis/SampleSize_{n}.txt.gz", n=config["GTEx_eQTL_mapping"]["variable_sample_sizes"]),
        # expand("GTEX_renalysis/Subsamples/output/Subsample_{subsample}.txt.gz", subsample=range(1, Num_subsamples + 1)),
        expand("PopulationSubstructure/ReferencePanelMerged.annotated.splits/{chromosome}.vcf", chromosome=contigs),
        "../../output/ChimpEgenes.eigenMT.txt.gz",
        # "OverdispersionAnalysis/GtexTissueMatrix.overdispersion.txt",
        "OverdispersionAnalysis/GTEx.genelengths.txt",
        # "eQTL_mapping/SharedPolymorphisms/MatchedSNPsToTest.vcf.gz",
        "OverdispersionAnalysis/FullCountTable.txt.gz",
        "eQTL_mapping/MatrixEQTL/ConfigCovariateModelResults/PermutationsCombined.txt",
        "../../output/TissueSpecificity/tau.log.txt",
        "MiscOutput/HumanVcfs/YRI.hg38.vcf.gz",
        "eQTL_mapping/SharedPolymorphisms/SpeciesSharedSnps.PanTro5.snps",
        "eQTL_mapping/SharedPolymorphisms/SpeciesSharedSnps.PanTro5.snploc",
        "eQTL_mapping/SharedPolymorphisms/SpeciesSharedMatchedSnps.PanTro5.snploc",
        "MiscOutput/allele_encodings.txt.gz",
        # "MiscOutput/HumanLocusZoomPlot",
        "../../output/SharedPolymorphisms.shared.chimpeqtls.txt",
        # "MiscOutput/HumanVcfs/YRI.vcf.gz",
        "MiscOutput/HumanVcfs/GEUVADIS.vcf.gz",
        "../../output/SharedPolymorphisms.shared.chimpeqtls.txt",
        # "MiscOutput/LocusZoomPlot",
        "MiscOutput/ForAssociationTesting.chromsrenamed.vcf.gz",
        "eQTL_mapping/MatrixEQTL/ConfigCovariateModelResults/Results.txt",
        expand("PowerAnalysis/Subread/{species}.{depth}.subread.txt.gz", species=["Human", "Chimp"], depth=[10000000,25000000]),
        expand(config["gitinclude_output"] + "PowerAnalysisFullCountTable.{species}.subread.txt.gz", species=["Human", "Chimp"]),

        "PowerAnalysis/Multiqc/multiqc_report.html",
        # expand(config["temp_files_prefix"] + "PowerAnalysisBams/{PowerAnalysisSample}/Aligned.sortedByCoord.out.bam", PowerAnalysisSample=PowerAnalysisFastqFrame.index),
        # expand(config["temp_files_prefix"] + "PowerAnalysisFastq/{PowerAnalysisSample}.fastq.gz", PowerAnalysisSample=PowerAnalysisFastqFrame.index),
        "sQTL_mapping/MatrixEQTL/Results/images/PCsVsSQTLs.pdf",
        config["gitinclude_output"] + "MatrixEQTL_sig_genotypes.raw",
        # "logs/eQTL_mapping/collect_Gemma_batchlogs.log",
        "eQTL_mapping/MatrixEQTL/Results/images/PCsVsEQTLs.pdf",
        "eQTL_mapping/Kinship/GRM.cXX.txt",
        "eQTL_mapping/FastQTL/ForAssociationTesting.bed.gz.tbi",
        "eQTL_mapping/MatrixEQTL/ForAssociationTesting.snploc",
        "../../output/RNA_seq_FlowCellInfo.txt",
        # expand ("qc/verifybamid/{sample}.bestSM", sample=samples["sample"] ),
        "eQTL_mapping/MatrixEQTL/ForAssociationTesting.geneloc.txt",
        "eQTL_mapping/MatrixEQTL/ForAssociationTesting.phenotypes.txt",
        # "eQTL_mapping/batchscripts/FullGetCisSNPsJobList.sh",
        # "logs/eQTL_mapping/collect_GetCisSNPs_batchlogs.log",
        "eQTL_mapping/MatrixEQTL/ForAssociationTesting.snps",
        "filtered/all.vcf.gz",
        config['gitinclude_output'] + "ForAssociationTesting.phenotypes.txt",
        # "PopulationSubstructure/ReferencePanelMerged.vcf",
        # "MiscOutput/LowComplexityRegions.bed",
        # "PopulationSubstructure/out.relatedness2",
        # "MiscOutput/filtered.bcftools.stats",
        # "MiscOutput/filtered.bcftools.smplstats",
        # "MiscOutput/STAR_index/chrLength.txt",
        expand("RNASeq/STAR/{sample}/Aligned.sortedByCoord.out.bam", sample=samples["sample"]),
        expand("RNASeq/STAR/{sample}/Aligned.sortedByCoord.out.bam.bai", sample=samples["sample"]),
        #"annotated/all.vcf.gz",
        config["gitinclude_output"] + "CountTable.SeparatedByFastq.tpm.txt.gz",
        "eQTL_mapping/plink/ForAssociationTesting.fam",
        config["gitinclude_output"] + "CountTable.tpm.txt.gz",
        config["gitinclude_output"] + "PopulationStructure/pca.eigenval",
        config["gitinclude_output"] + "PopulationStructure/pca.eigenvec",
        "PopulationSubstructure/plink/plink.eigenvec.var",
        # "qc/multiqc.html",
        # "MiscOutput/CallableSites.bed",
        # "genotyped/all.5.20000000-30000000.vcf",
        # expand("dedup_merged/{sample}.sorted.bam.bai", sample=samples["sample"]),
        # "filtered/all.vcf.gz",
        # "filtered/all.vcf.gz.tbi",
        # "MiscOutput/filtered.bcftools.stats",
        #"tables/calls.tsv.gz",
        #"plots/depths.svg",
        #"plots/allele-freqs.svg"
        # expand ( "PopulationSubstructure/Admixture/MergedForAdmixture.{K}.Q.pdf", K=config["PopulationSubstructure"]["AdmixtureK"] ),
        # expand(config["gitinclude_output"] + "PopulationStructure/Admixture/MergedForAdmixture.{K}.Q.labelled", K=config["PopulationSubstructure"]["AdmixtureK"]),
        "eQTL_mapping/Misc/cis_gene_windows.bed",
        "eQTL_mapping/plink/ForAssociationTesting.bed",
        config['gitinclude_output'] + "ForAssociationTesting.temp.fam",
        "eQTL_mapping/plink/ForAssociationTesting.bim",

##### Modules #####
include: "rules/make_test_data.smk"
include: "rules/mapping.smk"
include: "rules/RNASeqMapping.smk"
include: "rules/calling.smk"
include: "rules/populationstructure.smk"
#include: "rules/stats.smk"
include: "rules/eqtl_calling.smk"
include: "rules/sqtl_calling.smk"
include: "rules/PowerAnalysis.smk"
include: "rules/eQTL_analysis.smk"
include: "rules/Overdispersion.smk"
include: "rules/GTExReanalysis.smk"
include: "rules/GTExReanalysis_constantSampleSize.smk"
# eQTL_analysis requires an eqtl model results file to be defined in config
# include: "rules/qc.smk"
#include: "rules/annotation.smk"
